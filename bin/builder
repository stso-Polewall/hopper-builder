#!/usr/bin/env python3

from typing import Any

import logging
import argparse
import pkg_resources

from builder import Hw, Sw


def parse_args() -> Any:
    """parses arguments

    Returns
    -------
    Args
        Object contaning argument variables
    """
    parser = argparse.ArgumentParser()
    parser.add_argument("-v", "--version", action="version", version=pkg_resources.require("Hopper-Builder")[0].version)
    parser.add_argument("-V", dest="verbose", action='count', help="increase verbosity")
    parser.add_argument('--clean', action="store_true", help="Function not implemented")
    parser.add_argument('--pull', action="store_true", help="Function not implemented")
    parser.add_argument('module', help="Name of module to build")

    return parser.parse_args()


def main():
    arguments = parse_args()

    max_level = 20

    if arguments.verbose is None or arguments.verbose == 0:
        logging.basicConfig(format='[%(levelname)s] %(message)s', level=max_level)
    else:
        logging.basicConfig(format='%(asctime)s [%(levelname)s] %(module)s.%(funcName)s: %(message)s', level=max_level - arguments.verbose * 10)

    logging.debug("Creating instance of Hw")
    hw_build = Hw(arguments.module, arguments.verbose)
    if hw_build.is_enabled():
        hw_build.build_hw()
    else:
        logging.info("Hardware build skipped!")

    logging.debug("Deleting instance of Hw")
    del(hw_build)
    # =========================
    logging.debug("Creating instance for Sw")
    sw_build = Sw(arguments.module, arguments.verbose)
    if sw_build.is_enabled():
        sw_build.build_sw()
    else:
        logging.info("Software build skipped!")

    logging.debug("Deleting instance of Sw")
    del(sw_build)
    # =========================
    logging.info("Build Finished!")
    # =========================


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        quit()
