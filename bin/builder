#!/usr/bin/env python3

from typing import Any

import logging
import argparse
import time
import pkg_resources

import progressbar
from builder import Hw, Sw


def parse_args() -> Any:
    """parses arguments

    Returns
    -------
    Args
        Object contaning argument variables
    """
    parser = argparse.ArgumentParser()
    parser.add_argument("-v", "--version", action="version", version=pkg_resources.require("Hopper-Builder")[0].version)
    parser.add_argument("-V", "--verbose", action="store_true")
    parser.add_argument('--clean', action="store_true")
    parser.add_argument('--pull', action="store_true")
    parser.add_argument('module')
    return parser.parse_args()


def main():
    arguments = parse_args()

    progressbar.streams.wrap_stderr()
    if arguments.verbose:
        logging.basicConfig(format='%(asctime)s [%(levelname)s] %(module)s.%(funcName)s: %(message)s', level=logging.DEBUG)
    else:
        logging.basicConfig(format='%(message)s', level=logging.INFO)

    logging.debug("Creating instance of Hw")
    hw_build = Hw(arguments.module, arguments.verbose)
    if hw_build.is_enabled():
        hw_build.build_hw()
    else:
        logging.info("Hardware build skipped!")

    logging.debug("Deleting instance of Hw")
    del(hw_build)
    # =========================
    logging.debug("Creating instance for Sw")
    sw_build = Sw(arguments.module, arguments.verbose)
    if sw_build.is_enabled():
        sw_build.build_sw()
    else:
        logging.info("Software build skipped!")

    logging.debug("Deleting instance of Sw")
    del(sw_build)
    # =========================
    logging.info("Build Finished!")
    # =========================
    
        

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        quit()
