#!/usr/bin/env python3

from typing import Any

import logging
import argparse

import time
import random

import progressbar

from builder import Hw, Sw


def parse_args() -> Any:
    """parses arguments

    Returns
    -------
    Args
        Object contaning argument variables
    """
    parser = argparse.ArgumentParser()
    parser.add_argument('--clean', action="store_true")
    parser.add_argument('--pull', action="store_true")
    parser.add_argument('module')
    return parser.parse_args()


def main():
    progressbar.streams.wrap_stderr()
    logging.basicConfig(level=logging.INFO)
    arguments = parse_args()
    with progressbar.ProgressBar(max_value=3, redirect_stdout=True) as progress:
        progress.update(0)
        # =========================
        logging.debug("Creating instance of Hw")
        hw_build = Hw(arguments.module)
        if hw_build.is_enabled():
            hw_build.build_hw()
        else:
            logging.info("Hardware build skipped!")

        logging.debug("Deleting instance of Hw")
        del(hw_build)
        progress += 1  # Finished Hw
        # =========================
        logging.debug("Creating instance for Sw")
        sw_build = Sw(argparse.module)
        if sw_build.is_enabled():
            sw_build.build_sw()
        else:
            logging.info("Software build skipped!")

        logging.debug("Deleting instance of Sw")
        del(sw_build)
        progress += 1  # Finished Sw
        # =========================
        logging.info("Build Finished!")
        progress += 1  # Increment one last time
        time.sleep(2)
        # =========================
    
        

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        quit()
